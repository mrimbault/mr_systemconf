

# Load default theme variable files so we can initialize configuration files
# using this theme colors.
# That is only required for applications that does not have an "include"
# configuration feature, or something similar: there is an Ansible include into
# these file templates.
# FIXME how to set the theme_name if fact is not found?
- name: Load i3 current theme variables.
  include_vars: "vars/i3_theme_{{ selected_theme }}.yml"
  tags: theme, i3, i3wm
- name: Load i3bar current theme variables.
  include_vars: "vars/i3bar_theme_{{ selected_theme }}.yml"
  tags: theme, i3, i3wm, i3bar

# Generate configuration files from templates.
# These templates contain an Ansible include that load the default theme
# configuration into the generated file
- name: Update i3wm configuration file.
  template:
    src: 'templates/i3config.j2'
    dest: "{{ home_dir }}/.config/i3/config"
  tags: theme, i3, i3wm



# FIXME is templating required?
- name: Update i3blocks configuration file.
  template:
    src: 'templates/i3blocks.j2'
    dest: "{{ home_dir }}/.i3blocks.conf"
  tags: theme, i3, i3blocks

#- name: update dunst configuration file
#  template:
#    src: 'templates/dunst.j2'
#    dest: "{{ home_dir }}/dunst"
#  tags: theme

# FIXME how to select a rofi theme, if none is selected (first install)?
# Is that possible?
- name: Update rofi configuration file.
  template:
    src: 'templates/rofi.j2'
    dest: "{{ home_dir }}/.config/rofi/config"
  tags: theme


# Loop over themes list and update the application color theme files that will
# be used to switch themes with the select_theme script.
# FIXME why not a single task file?
- name: Update i3wm color theme files.
  include_tasks: "i3wm_color_theme.yml"
  loop: "{{ theme_list }}"
  loop_control:
    loop_var: "theme"
  tags: theme, i3, i3wm
- name: Update i3bar color theme files.
  include_tasks: "i3bar_color_theme.yml"
  loop: "{{ theme_list }}"
  loop_control:
    loop_var: "theme"
  tags: theme, i3, i3wm, i3bar
- name: Update rofi color theme files.
  include_tasks: "rofi_color_theme.yml"
  loop: "{{ theme_list }}"
  loop_control:
    loop_var: "theme"
  tags: theme, rofi


# Copy script used to manage display layout.
- name: Update script used to change monitor layout.
  copy:
    src: 'files/select_monitor_layout.sh'
    dest: "{{ script_dir }}/select_monitor_layout"
    mode: "0755"
  become: yes
  tags: sudo, script, i3, i3wm, rofi, layout

# Copy scripts used to manage applications theming.
- name: Update script used to replace include sections on configurations.
  copy:
    src: 'files/replace_file_section.sh'
    dest: "{{ script_dir }}/replace_file_section"
    mode: "0755"
  become: yes
  tags: sudo, script
- name: Update script used to change i3 theme.
  copy:
    src: 'files/i3_change_theme.sh'
    dest: "{{ script_dir }}/i3_change_theme"
    mode: "0755"
  become: yes
  tags: sudo, script, i3, i3wm, theme
- name: Update script used to select global theme.
  template:
    src: 'templates/select_theme.j2'
    dest: "{{ script_dir }}/select_theme"
    mode: "0755"
  become: yes
  tags: sudo, script, i3, i3wm, rofi, theme


