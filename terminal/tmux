
# Inpired by:
# - https://gist.github.com/spicycode/1229612
# - http://jasonwryan.com/blog/2010/01/07/tmux-terminal-multiplexer/


# Use non login shell by default.
set -g default-command "${SHELL}"

# Alter numbering so that the first window starts with 1, not 0, which with
# most keyboards is more convenient when selecting them by their number.
set -g base-index 1
setw -g pane-base-index 1

# FIXME is this necessary?
set -g renumber-windows on

# Automatically set window title.
set-window-option -g automatic-rename on
set-option -g set-titles on


set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi
setw -g monitor-activity on

# No delay for escape key press.
set -sg escape-time 0

# on-screen time for display-panes in ms
# FIXME what is this?
# set -g display-panes-time 2000

# Mappings

# Remap prefix from 'Ctrl-b' to 'Alt-a'.
unbind-key C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# Open a new window using the same current directory that the active pane.
bind C new-window -c "#{pane_current_path}"

# Vim style maps for splits.
#
# Yes, "split-window -h" is the equivalent of Vim's vertical split, and "-v" the
# default (thus horizontal) split.
# In fact there seems to be many confusions about what this orientation is
# refering to, the direction the new pane is opening, or the separator between
# the panes.
# To be consistent with Vim maps, I change to the same bindings.
#
# Split current window in two panes, the new one below to the current one.
bind-key s split-window -v
# Split current window in two panes, the new one right to the current one.
bind-key v split-window -h
# Same, but the new window will open with the same current directory that the
# active pane.
bind-key S split-window -v -c "#{pane_current_path}"
bind-key V split-window -h -c "#{pane_current_path}"

# Map to reload tmux config.
bind-key R source-file ~/.tmux.conf \; \
    display-message "Sourced ~/.tmux.conf file."


# Open a man page in new window, like Vim help.
# FIXME not a colored man?
bind-key / command-prompt "split-window 'exec man %%'"

# FIXME ssh session into new window, to check
# bind-key S command-prompt "new-window -n %1 'ssh %1'"

# Quick view of processes.
# FIXME open a more complete monitoring window?
bind-key F1 split-window "exec htop"

# Toggle current window's panes synchronization.
bind-key M-s setw synchronize-panes
# FIXME find a way to signal when this is on? alter pane's "inactive" colors?
# alter panes "border" color?
# FIXME add a binding or a mode to select panes to synchronize?


# Copy mode maps, Vim style and system clipboard.
# Enter copy using prefix (Alt-a) then a.
unbind-key [
bind-key a copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up
# Interact with system clipboard.
# See: https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
# Copy to both system selections: PRIMARY (buffer used to middle-mouse button
# paste) and CLIPBOARD.
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# Paste from system clipboard.
bind-key p run "xsel -b | tmux load-buffer - ; tmux paste-buffer"


# Mappings that don't use the prefix (use Alt-<key> and Alt-Shift-<key>)

# Use Alt-Shift-vim keys without prefix key to resize windows
# FIXME add bindings to resize more or less?
# FIXME use a window mode to resize?
# FIXME use these bindings to move splits around?
bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-H resize-pane -L 5
bind-key -n M-L resize-pane -R 5

# Use Alt-vim keys without prefix key to switch panes
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# FIXME window mode: allow pane resize, movement and position change

# FIXME
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n M-h if-shell "$is_vim" "send-keys A-h"  "select-pane -L"
#bind-key -n M-j if-shell "$is_vim" "send-keys A-j"  "select-pane -D"
#bind-key -n M-k if-shell "$is_vim" "send-keys A-k"  "select-pane -U"
#bind-key -n M-l if-shell "$is_vim" "send-keys A-l"  "select-pane -R"
##bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#bind-key -T copy-mode-vi M-h select-pane -L
#bind-key -T copy-mode-vi M-j select-pane -D
#bind-key -T copy-mode-vi M-k select-pane -U
#bind-key -T copy-mode-vi M-l select-pane -R
##bind-key -T copy-mode-vi C-\ select-pane -l


# Use Alt-[n-p] keys without prefix key to switch between windows
bind-key -n M-p previous-window
bind-key -n M-n next-window



######################
### DESIGN CHANGES ###
######################

######################
## loud or quiet?
#set-option -g visual-activity off
#set-option -g visual-bell off
#set-option -g visual-silence off
#set-window-option -g monitor-activity off
#set-option -g bell-action none

######################
# Set terminal color mode
# see: https://wiki.archlinux.org/index.php/tmux#Correct_the_TERM_variable_according_to_terminal_type
set -g default-terminal "tmux-256color"
# Terminal overrides to support 24-bit colors
set-option -ga terminal-overrides ",*256col*:Tc"
# FIXME howto fallback to another TERM (xterm ?) when not supported ?
# like ssh to another server ... TERM=xterm ssh ... ? ssh_config modification?

######################
## statusbar
set -g status-position top
set -g status-justify right
set -g status-right-length 50
set -g status-left-length 20
# status line refresh interval
set -g status-interval 5

######################
##  modes
# clock mode theme
# FIXME useless mode, possible to replace with something else, or remap the
# binding ? idea: usage information about system (time, but also load, etc.)
# FIXME other design change to modes
# - identify which mode we are on (copy mode, etc.)
# - change colors and information bars location (copy mode displays count up
#   and right)

######################
## panes
# FIXME

######################
## messages
# FIXME


######################
# Colour configuration
##
# Terminal defined colors:
# colour0  (grey)
# colour1  (red)
# colour2  (green)
# colour3  (yellow)
# colour4  (blue)
# colour5  (cyan)
# colour6  (magenta)
# colour7  (light grey)
# colour8  (black)
# colour9  (bright red)
# colour10 (bright green)
# colour11 (bright yellow)
# colour12 (bright blue)
# colour13 (bright cyan)
# colour14 (bright magenta)
# colour15 (white)

# Source symlink to currently selected theme.
# FIXME add an if clause?
source-file ${HOME}/.tmux_current_theme



